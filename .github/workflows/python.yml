# Copyright 2010 New Relic, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

name: "Python Init Container CI"

on:
  pull_request:
    paths:
      - 'src/python/**'
      - 'tests/python/**'
      - '.github/workflows/python.yml'
  push:
    paths:
      - 'src/python/**'
      - 'tests/python/**'
      - '.github/workflows/python.yml'
    branches:
      - main
    # Do not run when a tag is created.
    tags-ignore:
      - "**"
  release:
    types:
      - published

env:
  K8S_OPERATOR_IMAGE_TAG: edge

jobs:
  call-test:
    uses: ./.github/workflows/test.yml
    secrets: inherit
    with:
      INITCONTAINER_LANGUAGE: python
      K8S_OPERATOR_IMAGE_TAG: edge

  # call-publish:
  #   if: github.event_name == 'release' && endsWith(github.ref, '_python') # Skip everything if this isn't Python
  #   runs-on: ubuntu-latest
  #   needs:
  #     - call-test

  #   strategy:
  #     fail-fast: false

  #   steps:
  #     - uses: actions/setup-python@v4
  #     - name: Get agent version
  #       run: |
  #         if [[ ${{ matrix.agent-version }} == 'latest' ]]; then
  #           cd pythonjs && npm i newrelic@${{ matrix.agent-version }} && cd ..
  #           echo AGENT_VERSION=$(cat pythonjs/package.json | jq -r '.dependencies."newrelic"') >> $GITHUB_ENV 
  #         elif 
  #           echo AGENT_VERSION=${{ matrix.agent-version }} >> $GITHUB_ENV 
  #         fi

  #     - name: Format Agent Version
  #       id: version
  #       run: |
  #         agent_version=${{ env.AGENT_VERSION }}  # Use output
  #         echo NEW_RELIC_AGENT_VERSION=${{ env.AGENT_VERSION }} >> $GITHUB_ENV # Make ure to send the agent version to the dockerfile
  #         agent_version=${agent_version##v}  # Remove v prefix
  #         agent_version=${agent_version%%_python}  # Remove language suffix
  #         echo "agent_version=${agent_version}" | tee -a "$GITHUB_OUTPUT"

  #     - name: Call Publish Workflow for ${{ matrix.python-version }}
  #       uses: ./.github/workflows/publish.yml
  #       with:
  #         INITCONTAINER_LANGUAGE: python
  #         K8S_OPERATOR_IMAGE_TAG: ${{ env.K8S_OPERATOR_IMAGE_TAG }}
  #         NEW_RELIC_AGENT_VERSION: ${{ env.NEW_RELIC_AGENT_VERSION }}
  #         AGENT_VERSION_TAG: ${{steps.version.output.agent_version}}
  #         RUNTIME_VERSION: ${{ matrix.python-version }}
  #         DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
