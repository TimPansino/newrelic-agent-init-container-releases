# Copyright 2010 New Relic, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

name: "Python Init Container CI"

on:
  pull_request:
    paths:
      - 'src/python/**'
      - 'tests/python/**'
      - '.github/workflows/python.yml'
  push:
    paths:
      - 'src/python/**'
      - 'tests/python/**'
      - '.github/workflows/python.yml'
    branches:
      - main
    # Do not run when a tag is created.
    tags-ignore:
      - "**"
  release:
    types:
      - published

env:
  K8S_OPERATOR_IMAGE_TAG: edge
  AGENT_VERSION_LENGTH: 3

jobs:
  call-test:
    uses: ./.github/workflows/test.yml
    secrets: inherit
    with:
      INITCONTAINER_LANGUAGE: python

  # call-publish:
  #   if: github.event_name == 'release' && endsWith(github.ref, '_python') # Skip everything if this isn't Node
  #   runs-on: ubuntu-latest
  #   needs:
  #     - call-test

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [16, 18, 20]
  #       agent-version: ['latest']

  #   steps:
  #     - uses: actions/setup-node@v4
  #     - name: Get agent version
  #       run: |
  #         if [[ ${{ matrix.agent-version }} == 'latest' ]]; then
  #           cd nodejs && npm i newrelic@${{ matrix.agent-version }} && cd ..
  #           echo AGENT_VERSION=$(cat nodejs/package.json | jq -r '.dependencies."newrelic"') >> $GITHUB_ENV 
  #         elif 
  #           echo AGENT_VERSION=${{ matrix.agent-version }} >> $GITHUB_ENV 
  #         fi

  #     - name: Format Agent Version
  #       id: version
  #       run: |
  #         agent_version=${{ env.AGENT_VERSION }}  # Use output
  #         echo NEW_RELIC_AGENT_VERSION=${{ env.AGENT_VERSION }} >> $GITHUB_ENV # Make ure to send the agent version to the dockerfile
  #         agent_version=${agent_version##v}  # Remove v prefix
  #         agent_version=${agent_version%%_python}  # Remove language suffix
  #         echo "agent_version=${agent_version}" | tee -a "$GITHUB_OUTPUT"

  #     - name: Call Publish Workflow for ${{ matrix.node-version }}
  #       uses: ./.github/workflows/publish.yml
  #       with:
  #         INITCONTAINER_LANGUAGE: python
  #         K8S_OPERATOR_IMAGE_TAG: ${{ env.K8S_OPERATOR_IMAGE_TAG }}
  #         NEW_RELIC_AGENT_VERSION: ${{ env.NEW_RELIC_AGENT_VERSION }}
  #         AGENT_VERSION_TAG: ${{steps.version.output.agent_version}}
  #         RUNTIME_VERSION: ${{ matrix.node-version }}
  #         DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}










  #     - name: Build init container
  #       run: |
  #         minikube image build -t e2e/newrelic-${{ env.INITCONTAINER_LANGUAGE }}-init:e2e src/${{ env.INITCONTAINER_LANGUAGE }}/

  #     - name: Build test app container
  #       run: |
  #         minikube image build -t e2e/test-app-${{ env.INITCONTAINER_LANGUAGE }}:e2e tests/${{ env.INITCONTAINER_LANGUAGE }}/

  #     - name: Run e2e-test
  #       uses: newrelic/newrelic-integration-e2e-action@a97ced80a4841c8c6261d1f9dca6706b1d89acb1  # 1.11.0
  #       with:
  #         retry_seconds: 60
  #         retry_attempts: 5
  #         agent_enabled: false
  #         spec_path: tests/${{ env.INITCONTAINER_LANGUAGE }}/test-specs.yml
  #         account_id: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
  #         api_key: ${{ secrets.NEW_RELIC_API_KEY }}
  #         license_key: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

  # publish:
  #   if: github.event_name == 'release' && endsWith(github.ref_name, '_python')
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test

  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
  #       with:
  #         disable-sudo: true
  #         egress-policy: audit

  #     - name: Checkout code
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # 4.1.1
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0

  #     - name: Extract Agent Version
  #       id: version
  #       uses: ./.github/actions/extract_agent_version_tags

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # 3.3.0

  #     - name: Generate Docker metadata (tags and labels)
  #       id: meta
  #       uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # 5.5.1
  #       with:
  #         images: newrelic/newrelic-${{ env.INITCONTAINER_LANGUAGE }}-init
  #         tags: |
  #           type=raw,value=latest,priority=1000
  #           type=raw,value=${{ steps.version.outputs.major }},enabled=${{ steps.version.outputs.major_enabled }},priority=1001
  #           type=raw,value=${{ steps.version.outputs.minor }},enabled=${{ steps.version.outputs.minor_enabled }},priority=1002
  #           type=raw,value=${{ steps.version.outputs.patch }},enabled=${{ steps.version.outputs.patch_enabled }},priority=1003
  #           type=raw,value=${{ steps.version.outputs.build }},enabled=${{ steps.version.outputs.build_enabled }},priority=1004
  #           type=raw,value=${{ steps.version.outputs.subbuild }},enabled=${{ steps.version.outputs.subbuild_enabled }},priority=1005

  #     - name: Login to Docker Hub Container Registry
  #       uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # 3.1.0
  #       with:
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - name: Build and publish init container image
  #       uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # 5.3.0
  #       with:
  #         push: true
  #         context: src/${{ env.INITCONTAINER_LANGUAGE }}/
  #         platforms: linux/amd64,linux/arm64,linux/arm
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: |
  #           AGENT_VERSION=${{ steps.version.outputs.agent_version }}
