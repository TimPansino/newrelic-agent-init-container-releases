# Copyright 2010 New Relic, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Build test and publish Python init container image

on:
  # Allow manual trigger.
  workflow_dispatch: 
  pull_request:
  push:
    # Run on push to main or PR. 
    branches:
      - main
    # Do not run when a tag is created.
    tags-ignore:
      - "**"
  release:
    types:
      - published

env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME_SUFFIX: python

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # 4.1.1
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # 3.3.0

      - name: Start minikube
        uses: medyagh/setup-minikube@317d92317e473a10540357f1f4b2878b80ee7b95 # 0.0.16
      
      - name: Deploy cert-manager to minikube
        run: |
          kubectl create namespace cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.5/cert-manager.yaml
          kubectl wait --for=condition=Ready --namespace cert-manager --all pods

      - name: Deploy newrelic-agent-operator to minikube
        run: |
          kubectl create namespace newrelic
          helm repo add newrelic-agent-operator https://newrelic-experimental.github.io/newrelic-agent-operator
          helm upgrade --install newrelic-agent-operator newrelic-agent-operator/newrelic-agent-operator --set licenseKey=${{ secrets.K8S_AGENTS_E2E_LICENSE_KEY }} -n newrelic
          kubectl wait --for=condition=Ready --namespace newrelic --all pods

      - name: Build init container
        run: |
          docker build -t ${{ env.E2E_IMAGE_NAME }}:e2e python/
          minikube image load ${{ env.E2E_IMAGE_NAME }}:e2e

      - name: Build test app container
        run: |
          docker build -t e2e/python-test-app:e2e tests/python/
          minikube image load e2e/python-test-app:e2e

      - name: Deploy test app to minikube
        run: |
          kubectl create namespace python-test
          kubectl apply -f tests/python/customresource.yaml -n python-test
          kubectl apply -f tests/python/python_test_app_deployment.yaml -n python-test
          sleep 5
          kubectl wait --for=condition=Ready --namespace python-test --all pods

      - name: Test
        run: |
          curl --fail-with-body $(minikube service python-test-app-service --url -n python-test)

      # - name: Run e2e-test
      #   uses: newrelic/newrelic-integration-e2e-action@a97ced80a4841c8c6261d1f9dca6706b1d89acb1  # 1.11.0
      #   with:
      #     retry_seconds: 60
      #     retry_attempts: 5
      #     agent_enabled: false
      #     spec_path: tests/python/test-specs.yml
      #     account_id: ${{ secrets.K8S_AGENTS_E2E_ACCOUNT_ID }}
      #     api_key: ${{ secrets.K8S_AGENTS_E2E_API_KEY }}
      #     license_key: ${{ secrets.K8S_AGENTS_E2E_LICENSE_KEY }}

  publish:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # 4.1.1
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # 3.3.0

      - name: Generate Docker metadata (tags and labels)
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # 5.5.1
        with:
          images: docker.io/${{ github.repository }}-${{ env.IMAGE_NAME_SUFFIX }}
          tags: |
            flavor: |
              prefix=
              suffix=
              latest=auto
            tags: |
              type=sha,format=short,prefix=sha-
              type=sha,format=long,prefix=sha-
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=semver,pattern={{major}}

      - name: Login to Docker Hub Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # 3.1.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and publish init container image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # 5.3.0
        with:
          push: true
          context: python/
          platforms: linux/amd64,linux/arm64,linux/arm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
